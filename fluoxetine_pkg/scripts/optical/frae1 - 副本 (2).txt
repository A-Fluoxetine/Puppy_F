import cv2
i=0
# 锟斤拷锟斤拷锟斤拷头
cap = cv2.VideoCapture(0)

while True:
    # 锟斤拷取一帧图锟斤拷
    ret, frame = cap.read()
    if not ret:
        break

    # 锟斤拷图锟斤拷转锟斤拷为锟揭讹拷图
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # 锟斤拷斯模锟斤拷
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)

    # 锟斤拷缘锟斤拷锟?    edges = cv2.Canny(blurred, 50, 150)

    # 锟斤拷态学锟斤拷锟斤拷锟斤拷锟斤拷锟酵和革拷蚀锟斤拷锟斤拷锟叫★拷目斩锟斤拷锟饺ワ拷锟斤拷锟斤拷锟?    kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (3, 3))
    dilated = cv2.dilate(edges, kernel, iterations=1)
    eroded = cv2.erode(dilated, kernel, iterations=1)

    # 锟斤拷锟斤拷锟斤拷锟斤拷
    contours, _ = cv2.findContours(eroded.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    for contour in contours:
        # 锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟杰筹拷
        perimeter = cv2.arcLength(contour, True)
        # 锟斤拷锟斤拷锟斤拷锟斤拷锟叫讹拷锟斤拷谓锟斤拷锟?        approx = cv2.approxPolyDP(contour, 0.04 * perimeter, True)

        # 锟斤拷锟捷斤拷锟斤拷锟斤拷锟斤拷锟侥讹拷锟斤拷锟斤拷锟斤拷锟叫讹拷锟斤拷状
        if len(approx) == 4:
            # 锟斤拷锟斤拷锟斤拷锟斤拷
            cv2.drawContours(frame, [approx], -1, (0, 255, 0), 2)
            print("Detected a square!")
            i+=1
            print(i)
        elif len(approx) > 6:
            # 锟斤拷锟斤拷锟斤拷圆锟轿ｏ拷锟斤拷一锟斤拷锟叫讹拷
            area = cv2.contourArea(contour)
            ((x, y), radius) = cv2.minEnclosingCircle(contour)
            circle_area = 3.14 * radius * radius
            if abs(area - circle_area) / circle_area < 0.1:
                # 锟叫讹拷为圆锟斤拷
                cv2.circle(frame, (int(x), int(y)), int(radius), (255, 0, 0), 2)
                print("Detected a circle!")

    # 锟斤拷示锟斤拷锟?    cv2.imshow('Object Contours', frame)

    # 锟斤拷 'q' 锟斤拷锟剿筹拷循锟斤拷
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# 锟酵凤拷锟斤拷锟斤拷头锟斤拷锟截憋拷锟斤拷锟叫达拷锟斤拷
cap.release()
cv2.destroyAllWindows()
    